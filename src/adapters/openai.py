from adapters.adapter import LLMAdapter
from openai import AsyncOpenAI
from deployment.prompt_templates import rewrite_prompt

class OpenAIAdapter(LLMAdapter):
    """
    Adapter for OpenAI
    
    Inherits from:
        LLMAdapter: A base class 
    """

    def __init__(self, api_key: str):
        """
        Initializes the OpenAIAdapter with the provided API key.

        Args:
            api_key (str): OpenAI API key used to authenticate requests.
        """
        self.client = AsyncOpenAI(api_key=api_key)

    async def rewrite(self, text: str, style: str) -> str:
        """
        Rewrites the given text in the specified style using OpenAI's GPT model.

        Args:
            text (str): The input text to be rewritten.
            style (str): The desired writing style (e.g., "pirate", "formal", "haiku").

        Returns:
            str: The rewritten text generated by the model.
        """
        prompt = rewrite_prompt(text, style)

        response = await self.client.chat.completions.create(
            model="gpt-4",
            messages=[{"role": "user", "content": prompt}],
            temperature=0.0,
        )

        return response.choices[0].message.content.strip()